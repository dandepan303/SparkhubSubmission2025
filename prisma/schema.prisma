generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/prisma/generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String   @id
  email           String   @unique
  name            String
  contactInfo     String?

  jobApplications Job[]    @relation("JobApplications")

  jobsCreated     Job[]    @relation("JobHirer")
  jobsWorking     Job[]    @relation("JobWorker")

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  ratingFrom      Rating[]
  ratingTo        Rating[]

  @@map("users")
}

model Job {
  id           String    @id @default(cuid())
  title        String
  description  String
  location     String
  status       JobStatus @default(SEARCHING)

  hirerId      String
  workerId     String?
  hirer        User      @relation("JobHirer", fields: [hirerId], references: [id], onDelete: Cascade)
  worker       User?     @relation("JobWorker", fields: [workerId], references: [id])

  applications User[]    @relation("JobApplications")

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([status])
  @@index([location])
  @@index([createdAt])
  @@map("jobs")
}

model Rating {
  id        String     @id @default(cuid())
  value     Int
  text      String?
  type      RatingType
  fromId    String
  toId      String
  jobId     String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  from      User       @relation("RatingFrom", fields: [fromId], references: [id], onDelete: Cascade)
  job       Job?       @relation(fields: [jobId], references: [id])
  to        User       @relation("RatingTo", fields: [toId], references: [id], onDelete: Cascade)

  @@index([type])
  @@map("ratings")
}

model Offering {
  id          String      @id @default(cuid())
  description String
  cost        Int
  quantity    Int?
  inventoryId String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  inventories inventories @relation(fields: [inventoryId], references: [id], onDelete: Cascade)

  @@map("offerings")
}

enum JobStatus {
  SEARCHING
  IN_PROGRESS
  COMPLETED
}

enum RatingType {
  HIRER
  WORKER
}
